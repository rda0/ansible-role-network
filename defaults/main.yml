role_network: True
import_network_systemd: True
import_network_kernel_settings: True

#network_interface: en*
network_bond: {}
network_vlans: {}
network_bridges: []

network_systemd_domains: phys.ethz.ch ethz.ch
# Due to a limitation in linux (`man resolv.conf`) and some network utilities (like `host`),
# it is not possible to use more than 3 nameservers. systemd-networkd will work just fine,
# but the generated `/etc/resolv.conf`, which is used by programs bypassing the libc resolver api,
# will contain a comment after the third nameserver entry:
#   Too many DNS servers configured, the following entries may be ignored.
# and after that list the remaining nameservers and then the search domains.
# Single-label host lookups (`host <hostname>`) will break: `Host <hostname> not found: 3(NXDOMAIN)`
#
# Use max 3 nameservers:
network_systemd_dns_ipv4: 129.132.98.12 129.132.250.2
network_systemd_dns_ipv6: 2001:67c:10ec::c

network_systemd_restart: True
network_systemd_wipe: False
network_systemd_clean_install: True
network_systemd_template: default_dhcp
network_systemd_network_local: []
network_systemd_netdev_local: []
network_systemd_network: '{{ network_systemd_network_templates[network_systemd_template] + network_systemd_network_local }}'
network_systemd_netdev: '{{ network_systemd_netdev_templates[network_systemd_template] + network_systemd_netdev_local }}'
network_systemd_unit_networking_disable: '{{ network_systemd_clean_install }}'
network_systemd_etc_network_interfaces_truncate: '{{ network_systemd_clean_install }}'
network_systemd_etc_network_interfaces_d_remove: '{{ network_systemd_clean_install }}'
network_systemd_remove_network_manager: '{{ network_systemd_clean_install }}'
network_systemd_remove_netplan: '{{ network_systemd_clean_install }}'
network_systemd_remove_dhcpcd: '{{ network_systemd_clean_install }}'
network_systemd_remove_networkd_dispatcher: '{{ network_systemd_clean_install }}'
network_systemd_ipv6_accept_ra: False
network_systemd_ipv6_static_gateway: True
network_systemd_networkd_wait_online: True
network_systemd_networkd_wait_online_any: False
network_systemd_resolved_conf: ''
network_systemd_resolved_libnss: True
network_systemd_resolved_llmnr: 'no'
network_systemd_resolved_multicast_dns: 'no'
network_systemd_resolved_dnssec: 'no'
network_systemd_resolved_cache: 'yes'
network_systemd_resolved_stub: False
network_systemd_resolved_global_dns: "{{ False if 'dhcp' in network_systemd_template else True }}"
network_systemd_resolved_debug: False

# Automatically detect when template contains a bridge
_network_has_bridge: "{{ True if 'bridge' in network_systemd_template else False }}"
# Automatically detect when template contains a bridge and has a dedicated management interface not on the bridge
_network_has_bridge_and_management_interface: "{{ True if _network_has_bridge and network_interface not in network_bridges | map(attribute='name') | flatten else False }}"
# Manually set this flag in host_vars if multiple interfaces are on the same layer 2 subnet (vlan)
# Automatically set this flag for bridged templates with dedicated management interface,
# assuming both bridge and management interface are on the same layer 2 subnet (vlan)
network_multiple_interfaces_on_same_subnet: "{{ True if _network_has_bridge_and_management_interface else False }}"
network_ipv4_ip_forward: False
network_ipv4_ip_mtu_probing: 0
network_netfilter_nf_conntrack_max: '65536'
network_kernel_settings_filename: "91-net.conf"
network_kernel_settings_file: "/etc/sysctl.d/{{ network_kernel_settings_filename }}"
# List of kernel settings to configure via sysctl
# - value: the desired value
# - default: the kernel's default value
# Will only be modified/configured if value is not equal to default
_network_kernel_settings:
  - name: net.ipv4.conf.all.arp_ignore
    value: "{{ '1' if network_multiple_interfaces_on_same_subnet else '0' }}"
    default: '0'
  - name: net.ipv4.conf.default.arp_filter
    value: "{{ '1' if network_multiple_interfaces_on_same_subnet else '0' }}"
    default: '0'
  - name: net.ipv4.ip_forward
    value: "{{ '1' if network_ipv4_ip_forward else '0' }}"
    default: '0'
  - name: net.netfilter.nf_conntrack_max
    value: "{{ network_netfilter_nf_conntrack_max }}"
    default: '65536'
  - name: net.ipv4.tcp_mtu_probing
    value: "{{ network_ipv4_ip_mtu_probing }}"
    default: '0'
